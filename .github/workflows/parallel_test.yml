# Run tests in parallel to check for bugs that only show up on multiple processes
name: Run tests in parallel

on: [push, pull_request, workflow_dispatch]

permissions:
  actions: write
  contents: read

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    strategy:
      matrix:
        numprocs: [2, 3, 4]
        isMaster:
          - ${{ github.ref == 'master' }}
        include:
          # Default to no "--long" flag
          - long: ""
          # Add "--long" flag when running with numprocs=2
          - long: "--long"
            numprocs: 2
        exclude:
          - isMaster: false
            numprocs: 3
          - isMaster: false
            numprocs: 4

    # Only run 3 and 4 proc tests when merging to master.
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.11'
          arch: x64
      - uses: julia-actions/cache@v2
      - run: |
          touch Project.toml
          julia --project -O3 -e 'import Pkg; Pkg.add(["MPI", "MPIPreferences", "PackageCompiler"]); using MPIPreferences; MPIPreferences.use_jll_binary("OpenMPI_jll")'
          julia --project -O3 -e 'using MPI; MPI.install_mpiexecjl(; destdir=".")'
          julia --project -O3 -e 'import Pkg; Pkg.add(["NCDatasets", "Random", "SpecialFunctions", "StatsBase", "Test"]); Pkg.develop(path="moment_kinetics/")'
          julia --project -O3 -e 'import Pkg; Pkg.precompile()'
          julia --project -O3 precompile.jl
          # Need to use openmpi so that we can use `--oversubscribe` to allow using more MPI ranks than physical cores
          ./mpiexecjl -np ${{ matrix.numprocs }} --oversubscribe julia -J moment_kinetics.so --project -O3 moment_kinetics/test/runtests.jl --ci --debug 1 ${{ matrix.long }}
          # Note: MPI.jl's default implementation is mpich, which has a similar option
          # `--with-device=ch3:sock`, but that needs to be set when compiling mpich.
        shell: bash

  # macOS is slow at the moment, so only run one set of parallel tests
  test-macOS:
    runs-on: macOS-latest
    timeout-minutes: 180

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.11'
      - uses: julia-actions/cache@v2
      - run: |
          touch Project.toml
          # Pin versions of HDF5_jll for now because HDF5_jll@1.14.6+0 causes
          # linker errors, when also using MPI. Should remove this pin when the
          # latest version is fixed, see
          # https://github.com/JuliaIO/HDF5.jl/issues/1191.
          julia --project -O3 -e 'import Pkg; Pkg.add(name="HDF5_jll", version="1.14.2"); Pkg.add(["MPI", "MPIPreferences", "PackageCompiler"]); using MPIPreferences; MPIPreferences.use_jll_binary("OpenMPI_jll")'
          julia --project -O3 -e 'using MPI; MPI.install_mpiexecjl(; destdir=".")'
          julia --project -O3 -e 'import Pkg; Pkg.add(["NCDatasets", "Random", "SpecialFunctions", "StatsBase", "Test"]); Pkg.develop(path="moment_kinetics/")'
          julia --project -O3 -e 'import Pkg; Pkg.precompile()'
          julia --project -O3 precompile.jl
          # Need to use openmpi so that we can use `--oversubscribe` to allow using more MPI ranks than physical cores
          ./mpiexecjl -np 4 --oversubscribe julia -J moment_kinetics.so --project -O3 moment_kinetics/test/runtests.jl --ci --debug 1
          # Note: MPI.jl's default implementation is mpich, which has a similar option
          # `--with-device=ch3:sock`, but that needs to be set when compiling mpich.
        shell: bash
